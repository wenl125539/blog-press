import{_ as n,c as s,o as a,e as p}from"./app.348d2e61.js";const d='{"title":"vite\u63D2\u4EF6\u7248\u672C","description":"","frontmatter":{},"headers":[{"level":2,"title":"vite\u63D2\u4EF6\u7248\u672C","slug":"vite\u63D2\u4EF6\u7248\u672C"}],"relativePath":"plugin/06_Mock/01_vite-mock\u63D2\u4EF6.md","lastUpdated":1665736891000}',t={},e=p(`<h2 id="vite\u63D2\u4EF6\u7248\u672C" tabindex="-1">vite\u63D2\u4EF6\u7248\u672C</h2><p><a href="https://github.com/vbenjs/vite-plugin-mock/blob/main/README.zh_CN.md" target="_blank" rel="noopener noreferrer">\u5B98\u7F51</a></p><blockquote><p>\u5B89\u88C5 \u4F7F\u7528\u5B98\u7F51\u5DF2\u7ECF\u4ECB\u7ECD\u5F88\u6E05\u695A\u4E86 \u8BB0\u5F55\u4E00\u4E0B\u81EA\u5DF1\u7684\u914D\u7F6E\u65B9\u5F0F</p></blockquote><ol><li>\u914D\u7F6E\u63D2\u4EF6\u4FE1\u606F</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> UserConfigExport<span class="token punctuation">,</span> ConfigEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> viteMockServe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> command <span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">UserConfigExport</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">mockPath</span><span class="token operator">:</span> <span class="token string">&#39;mock&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">localEnabled</span><span class="token operator">:</span> command <span class="token operator">===</span> <span class="token string">&#39;serve&#39;</span><span class="token punctuation">,</span>  <span class="token comment">//\u662F\u5426\u5F00\u53D1\u73AF\u5883</span>
        <span class="token literal-property property">prodEnabled</span><span class="token operator">:</span> command <span class="token operator">===</span> <span class="token string">&#39;serve&#39;</span><span class="token punctuation">,</span>  <span class="token comment">//\u662F\u5426\u5F00\u53D1\u73AF\u5883</span>
        <span class="token comment">// \u5F15\u5165\u521B\u5EFA\u670D\u52A1\u7684\u6587\u4EF6 \u7B2C\u4E8C\u90E8\u4F1A\u521B\u5EFA\u6539\u6587\u4EF6</span>
        <span class="token literal-property property">injectCode</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
          import { setupProdMockServer } from &#39;../mock/createProductionServer&#39;;  
          setupProdMockServer();
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="2"><li>\u7F16\u5199\u521B\u5EFAmock\u670D\u52A1\u6587\u4EF6 -- \u6839\u76EE\u5F55/mock/createProductionServer.ts</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createProdMockServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock/es/createProdMockServer&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// ================\u5F15\u5165api start (\u9009\u5176\u4E2D\u4E00\u79CD\u5C31\u53EF\u4EE5) ===========</span>
<span class="token comment">// \u624B\u52A8\u5F15\u5165api </span>
<span class="token keyword">import</span> cascader <span class="token keyword">from</span> <span class="token string">&quot;./modules/cascader&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> growCard <span class="token keyword">from</span> <span class="token string">&quot;./modules/growCard&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">mockModules</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token operator">...</span>cascader<span class="token punctuation">,</span>
  <span class="token operator">...</span>growCard
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u81EA\u52A8\u5F15\u5165api</span>
<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;./**/*.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">mockModules</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>modules<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  mockModules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>modules<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ================\u5F15\u5165api end ===========</span>


 <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupProdMockServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createProdMockServer</span><span class="token punctuation">(</span>mockModules<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ol start="3"><li>\u5B9A\u4E49\u597D\u8FD4\u56DE\u8FD4\u56DE\u53C2\u6570 \u8BF7\u6C42\u65B9\u5F0F\u7B49\u679A\u4E3E -- \u6839\u76EE\u5F55/mock/httpEnum.ts</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token comment">/**
 * @description: \u8FD4\u56DE\u72B6\u6001\u7801
 */</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> ResultEnum <span class="token punctuation">{</span>
  <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token constant">ERROR</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">TIMEOUT</span> <span class="token operator">=</span> <span class="token number">401</span><span class="token punctuation">,</span>
  <span class="token constant">TYPE</span> <span class="token operator">=</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * @description: \u8BF7\u6C42\u65B9\u5F0F
 */</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> RequestEnum <span class="token punctuation">{</span>
  <span class="token constant">GET</span> <span class="token operator">=</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">POST</span> <span class="token operator">=</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PUT</span> <span class="token operator">=</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DELETE</span> <span class="token operator">=</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * @description:  \u8BF7\u6C42\u5934
 */</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> ContentTypeEnum <span class="token punctuation">{</span>
  <span class="token comment">// json</span>
  <span class="token constant">JSON</span> <span class="token operator">=</span> <span class="token string">&#39;application/json;charset=UTF-8&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// form-data qs</span>
  <span class="token constant">FORM_URLENCODED</span> <span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded;charset=UTF-8&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// form-data  upload</span>
  <span class="token constant">FORM_DATA</span> <span class="token operator">=</span> <span class="token string">&#39;multipart/form-data;charset=UTF-8&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><ol start="4"><li>\u7EDF\u4E00\u4E00\u4E0B\u8FD4\u56DE\u683C\u5F0F -- \u6839\u76EE\u5F55/mock/util.ts</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u7528\u4E8E\u8FD4\u56DE\u7EDF\u4E00\u683C\u5F0F\u7684\u63A5\u53E3\u6570\u636E\u683C\u5F0F</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ResultEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./httpEnum&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> resultSuccess<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> message <span class="token operator">=</span> <span class="token string">&#39;ok&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> ResultEnum<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
    message<span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> resultPageSuccess<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">page</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
  <span class="token literal-property property">pageSize</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
  <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> message <span class="token operator">=</span> <span class="token string">&#39;ok&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> pageData <span class="token operator">=</span> <span class="token function">pagination</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token function">resultSuccess</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">items</span><span class="token operator">:</span> pageData<span class="token punctuation">,</span>
      <span class="token literal-property property">total</span><span class="token operator">:</span> list<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    message<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resultError</span><span class="token punctuation">(</span>
  message <span class="token operator">=</span> <span class="token string">&#39;Request failed&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> status <span class="token operator">=</span> ResultEnum<span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    status<span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
    message<span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> pagination<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span>pageNo<span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">pageSize</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">array</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> offset <span class="token operator">=</span> <span class="token punctuation">(</span>pageNo <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">Number</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> offset <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length
    <span class="token operator">?</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token operator">:</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> offset <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">requestParams</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  headers<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> authorization<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token literal-property property">query</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * @description \u672C\u51FD\u6570\u7528\u4E8E\u4ECErequest\u6570\u636E\u4E2D\u83B7\u53D6token\uFF0C\u8BF7\u6839\u636E\u9879\u76EE\u7684\u5B9E\u9645\u60C5\u51B5\u4FEE\u6539
 *
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getRequestToken</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> headers <span class="token punctuation">}</span><span class="token operator">:</span> requestParams</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> headers<span class="token operator">?.</span>authorization<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><ol start="5"><li>\u521B\u5EFAapi</li></ol><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> MockMethod <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> resultSuccess <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> 

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/mock-api/api&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">resultSuccess</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD4\u56DESuccess</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/mock-api/api2&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">resultError</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8FD4\u56DEError</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> MockMethod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ol start="6"><li>\u5DF2\u7ECF\u5B8C\u6210\u4E86</li></ol><blockquote><p>\u542F\u52A8\u8BD5\u8BD5\u770B \u53EF\u4EE5postman\u76F4\u63A5\u8BBF\u95EE\u63A5\u53E3 eg <a href="http://localhost" target="_blank" rel="noopener noreferrer">http://localhost</a>:\u9879\u76EE\u7AEF\u53E3/mock-api/api</p></blockquote>`,15),o=[e];function c(l,r,u,i,k,b){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
